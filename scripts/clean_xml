#!/usr/bin/env python

import os
import argparse
import re

TITLE_REGEX = re.compile("\s+<title>(.*)<\/title>$")
START_REGEX = re.compile("\s+<page>$")
END_REGEX = re.compile("\s+<\/page>$")

TITLES = set()

def main():
    """Run the main program"""

    desc = """\
Remove duplicate titles from a wikimedia dump.

This script will scan through a wikimeda dump. Any duplicate titles will be
skipped. This script creates a temporary file and then replaces the original
file.

Beware that the temporary file is roughly the same size as the original, so
make sure you have enough space on the device to temporary duplicate the file.
"""

    parser = argparse.ArgumentParser(
        description=desc, formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument(
        "input", metavar="<intput file>", help="the input file to parse"
    )
    parser.add_argument(
        "-k", "--keep", action="store_true", help="Don't replace the original file"
    )
    parser.add_argument(
        "-i", "--ignore_file", help="A file with titles to ignore. Each on a new line.")
    )


    args = parser.parse_args()

    tmp_file = args.input + ".clean"
    article = False
    content = ""
    title = None

    ignore = []
    if args.ignore_file:
        with open(args.ignore_file) as _file:
            ignore = _file.readlines()

    try:
        output = open(tmp_file, "w")
        with open(args.input) as _file:
            for line in _file:
                if START_REGEX.match(line):
                    article = True

                if not article:
                    output.write(line)
                    continue

                tmatch = TITLE_REGEX.match(line)
                if tmatch:
                    title = tmatch.group(1)

                content += line

                if END_REGEX.match(line):
                    assert title, "Title not correctly set for article"

                    if title in ignore:
                        print('Title "%s" in ignore file -- skipping' % title)
                    elif title in TITLES:
                        print('Duplicate title: "%s" -- skipping' % title)
                    else:
                        TITLES.add(title)
                        output.write(content)

                    # Reset
                    content = ""
                    title = None
                    article = False

        # Replace the old file with the deduped file
        if not args.keep:
            os.rename(tmp_file, args.input)
    except KeyboardInterrupt:
        pass
    finally:
        # Cleanup if necessary
        if os.path.exists(tmp_file) and not args.keep:
            os.remove(tmp_file)

main()
